swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /api/v1
paths:
  /article/add:
    post:
      tags:
      - article
      description: 新增文章
      operationId: ArticleController.新增文章
      parameters:
      - in: body
        name: userId
        description: 当前用户id
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: title
        description: 文章title
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: content
        description: 文章内容
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: category
        description: 一级分类
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: subCategory
        description: 二级分类
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: tag
        description: 标签们 tag='1,2,3', 1 2 3分别为标签的id
        schema:
          $ref: '#/definitions/str'
      responses:
        "200":
          description: '{strings} "ok"'
  /article/delete/{id}:
    get:
      tags:
      - article
      description: 删除一篇文章，
      operationId: ArticleController.删除一篇文章，
      parameters:
      - in: path
        name: id
        description: 删除一篇文章，用于后台
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
  /article/edit:
    post:
      tags:
      - article
      description: 修改文章
      operationId: ArticleController.修改文章
      parameters:
      - in: formDate
        name: article_id
        description: 当前文章id
        required: true
        type: integer
        format: int64
      - in: formDate
        name: title
        description: 文章title
        required: true
        type: string
      - in: formDate
        name: content
        description: 文章内容
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
  /article/get/{id}:
    get:
      tags:
      - article
      description: 查询一篇文章
      operationId: ArticleController.查询一篇文章
      parameters:
      - in: path
        name: id
        description: 根据id查询详情，点击进入文章详情
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
  /article/getall:
    get:
      tags:
      - article
      description: 条件查询所有
      operationId: ArticleController.条件查询所有分类/作者/标签
      parameters:
      - in: query
        name: page
        description: 页码
        type: string
      - in: query
        name: title
        description: 标题
        type: string
      - in: query
        name: tags
        description: 标签
        type: string
      - in: query
        name: authorId
        description: 作者
        type: string
      - in: query
        name: categoryName
        description: 分类
        type: string
      - in: query
        name: subCategoryName
        description: 二级分类
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
  /article/getcount:
    get:
      tags:
      - article
      description: 获取文章总数量
      operationId: ArticleController.获取文章总数量
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
  /article/image:
    post:
      tags:
      - article
      description: 接受副文本编辑器的图像
      operationId: ArticleController.接受副文本编辑器的图像
      parameters:
      - in: formDate
        name: content
        description: 文章内容
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
  /category/add:
    post:
      tags:
      - category
      description: 新增分类
      operationId: CategoryController.新增分类
      parameters:
      - in: formDate
        name: name
        description: 新增分类名称
        required: true
        type: string
      - in: formDate
        name: url
        description: 新增分类名称
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: add failed
  /category/delete/{id}:
    get:
      tags:
      - category
      description: 删除分类
      operationId: CategoryController.删除分类
      parameters:
      - in: path
        name: id
        description: 分类的id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: add failed
  /category/get/{id}:
    get:
      tags:
      - category
      description: 根据id查询分类
      operationId: CategoryController.查询一个
      parameters:
      - in: path
        name: id
        description: 分类的id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: register failed
  /category/getall:
    get:
      tags:
      - category
      description: 查询所有分类
      operationId: CategoryController.查询所有分类
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: register failed
  /category/update:
    post:
      tags:
      - category
      description: 修改分类
      operationId: CategoryController.编辑分类后保存
      parameters:
      - in: formDate
        name: id
        description: 分类的id
        required: true
        type: integer
        format: int64
      - in: formDate
        name: name
        description: 新的分类名称
        required: true
        type: string
      - in: formDate
        name: url
        description: 新的分类名称
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: register failed
  /comment/add:
    post:
      tags:
      - comment
      description: 添加评论
      operationId: CommentController.添加评论
      parameters:
      - in: body
        name: articleId
        description: 文章id
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: userId
        description: 评论人id
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: content
        description: 评论内容
        required: true
        schema:
          type: string
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
  /comment/delete/{id}:
    get:
      tags:
      - comment
      description: 删除评论
      operationId: CommentController.删除评论
      parameters:
      - in: query
        name: commentId
        description: 评论id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
  /message/add:
    post:
      tags:
      - message
      description: 留言板添加信息
      operationId: MessageController.留言板添加信息
      parameters:
      - in: body
        name: content
        description: 留言板添加信息
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: userId
        description: 留言板添加信息
        schema:
          type: string
        type: string
      responses:
        "200":
          description: '{strings} "ok"'
  /message/delete:
    get:
      tags:
      - message
      description: 管理员删除一条记录
      operationId: MessageController.管理员删除一条记录
      parameters:
      - in: query
        name: content
        description: 需要删除的item
        required: true
        type: string
      responses:
        "200":
          description: '{strings} "ok"'
  /message/get:
    get:
      tags:
      - message
      description: 取留言板记录
      operationId: MessageController.取留言板记录
      parameters:
      - in: query
        name: page
        description: 默认展示十条,
        type: string
      responses:
        "200":
          description: '{strings} "ok"'
  /message/getcount:
    get:
      tags:
      - message
      description: 查询总的留言条数
      operationId: MessageController.查询总的留言条数
      responses:
        "200":
          description: '{strings} "ok"'
  /sub_category/add:
    post:
      tags:
      - sub_category
      description: 新增二级分类
      operationId: SubCategoryController.新增二级分类
      parameters:
      - in: formDate
        name: id
        description: 对应一级分类的id
        required: true
        type: integer
        format: int64
      - in: formDate
        name: name
        description: 新增分类名称
        required: true
        type: string
      - in: formDate
        name: url
        description: 新增分类名称
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubCategory'
        "400":
          description: add failed
  /sub_category/delete/{id}:
    get:
      tags:
      - sub_category
      description: 删除二级分类
      operationId: SubCategoryController.删除二级分类
      parameters:
      - in: path
        name: id
        description: 二级分类的id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubCategory'
        "400":
          description: add failed
  /sub_category/get/{id}:
    get:
      tags:
      - sub_category
      description: 根据id查询分类
      operationId: SubCategoryController.查询一个
      parameters:
      - in: path
        name: id
        description: 1级分类的id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubCategory'
        "400":
          description: register failed
  /sub_category/getall:
    get:
      tags:
      - sub_category
      description: 查询所有二级分类
      operationId: SubCategoryController.查询所有二级分类
      parameters:
      - in: query
        name: id
        description: 1级分类的id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubCategory'
        "400":
          description: register failed
  /sub_category/update:
    post:
      tags:
      - sub_category
      description: 编辑分类后保存二级分类
      operationId: SubCategoryController.编辑分类后保存二级分类
      parameters:
      - in: formDate
        name: id
        description: 一级分类的id
        required: true
        type: integer
        format: int64
      - in: formDate
        name: sub_id
        description: 二级分类的id
        required: true
        type: integer
        format: int64
      - in: formDate
        name: name
        description: 新二级分类名称
        required: true
        type: string
      - in: formDate
        name: url
        description: 新二级分类名称url
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubCategory'
        "400":
          description: register failed
  /sub_comment/add:
    post:
      tags:
      - sub_comment
      description: 添加评论
      operationId: SubCommentController.添加评论
      parameters:
      - in: formDate
        name: commentId
        description: 一级评论id
        required: true
        type: string
      - in: formDate
        name: userId
        description: 评论人id
        required: true
        type: string
      - in: formDate
        name: articleId
        description: 文章id
        required: true
        type: string
      - in: formDate
        name: content
        description: 评论内容
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
  /sub_comment/delete/{id}:
    get:
      tags:
      - sub_comment
      description: 删除二级评论
      operationId: SubCommentController.删除二级评论
      parameters:
      - in: query
        name: subCommentId
        description: 二级评论id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
  /tag/add:
    post:
      tags:
      - tag
      description: 新增一个标签
      operationId: TagController.新增一个标签
      parameters:
      - in: formDate
        name: name
        description: 标签名称
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: register failed
  /tag/getArticle:
    get:
      tags:
      - tag
      description: 根据标签查询出来对应类型的文章
      operationId: TagController.根据标签查询出来对应类型的文章
      parameters:
      - in: query
        name: id
        description: 标签id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.article'
        "400":
          description: register failed
  /tag/getall:
    get:
      tags:
      - tag
      description: 查询所有标签
      operationId: TagController.查询所有标签
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: register failed
  /user/all:
    get:
      tags:
      - user
      description: 用户列表
      operationId: UserController.用户列表
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: register failed
  /user/getList:
    get:
      tags:
      - user
      description: 用户列表 1,2,3
      operationId: UserController.用户列表2
      parameters:
      - in: query
        name: ids
        description: 1,2
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: register failed
  /user/login:
    post:
      tags:
      - user
      description: 登录
      operationId: UserController.登录
      parameters:
      - in: body
        name: username
        description: 用户名
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: password
        description: 密码
        required: true
        schema:
          type: string
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: login failed
  /user/profile/add:
    post:
      tags:
      - user
      description: 完善用户信息
      operationId: ProfileController.完善用户信息
      parameters:
      - in: formDate
        name: userId
        description: 用户id
        required: true
        type: integer
        format: int64
      - in: formDate
        name: gender
        description: 性别
        required: true
        type: integer
        format: int64
      - in: formDate
        name: age
        description: 年龄
        required: true
        type: integer
        format: int64
      - in: formDate
        name: address
        description: 地址
        required: true
        type: string
      - in: formDate
        name: telephone
        description: 手机
        required: true
        type: string
      - in: formDate
        name: avator
        description: 头像的路径
        required: true
        type: string
      - in: formDate
        name: personality
        description: 个人简介
        required: true
        type: string
      responses:
        "200":
          description: '{strings} "ok"'
  /user/profile/get/{userId}:
    get:
      tags:
      - user
      description: 查询一个
      operationId: ProfileController.查询一个
      parameters:
      - in: path
        name: userId
        description: 用户id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Profile'
  /user/profile/update:
    post:
      tags:
      - user
      description: 更新用户profile信息
      operationId: ProfileController.更新用户profile信息
      parameters:
      - in: formDate
        name: profileId
        description: 用户 的 profileId
        required: true
        type: integer
        format: int64
      - in: formDate
        name: gender
        description: 性别
        required: true
        type: integer
        format: int64
      - in: formDate
        name: age
        description: 年龄
        required: true
        type: integer
        format: int64
      - in: formDate
        name: address
        description: 地址
        required: true
        type: string
      - in: formDate
        name: telephone
        description: 手机
        required: true
        type: string
      - in: formDate
        name: personality
        description: 个人简介
        required: true
        type: string
      responses:
        "200":
          description: '{strings} "ok"'
  /user/profile/update/avator:
    post:
      tags:
      - user
      description: 更新用户头像
      operationId: ProfileController.更新用户头像
      parameters:
      - in: formDate
        name: profileId
        description: 用户 的 profileId
        required: true
        type: string
      - in: formDate
        name: userId
        description: 用户 的 userId
        required: true
        type: string
      - in: formDate
        name: avator
        description: 头像
        required: true
        type: string
      responses:
        "200":
          description: '{strings} "ok"'
  /user/registe:
    get:
      tags:
      - user
      description: 检查用户名是否存在
      operationId: UserController.检查用户名是否存在
      parameters:
      - in: query
        name: username
        description: 用户名
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: register failed
    post:
      tags:
      - user
      description: 注册
      operationId: UserController.注册
      parameters:
      - in: body
        name: username
        description: 用户名
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: password
        description: 密码
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: email
        description: 邮箱
        required: true
        schema:
          type: string
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: register failed
  /user/update:
    post:
      tags:
      - user
      description: 更新密码
      operationId: UserController.更新密码
      parameters:
      - in: formData
        name: id
        description: username
        required: true
        type: integer
        format: int64
      - in: formData
        name: password1
        description: 原密码
        required: true
        type: string
      - in: formData
        name: password2
        description: 新密码
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: register failed
definitions:
  models.Article:
    title: Article
    type: object
    properties:
      Author:
        $ref: '#/definitions/models.User'
      Category:
        $ref: '#/definitions/models.Category'
      Comment:
        type: array
        items:
          $ref: '#/definitions/models.Comment'
      Content:
        type: string
      CreateDate:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Image:
        type: string
      Pinglun:
        type: integer
        format: int64
      State:
        description: 这是状态字段 0 已发表    1 已删除
        type: integer
        format: int64
      SubCategory:
        $ref: '#/definitions/models.SubCategory'
      SubComment:
        type: array
        items:
          $ref: '#/definitions/models.SubComment'
      Tag:
        type: array
        items:
          $ref: '#/definitions/models.Tag'
      Title:
        type: string
      UpdateDate:
        type: string
        format: datetime
      View:
        description: 阅读数量
        type: integer
        format: int64
      Zan:
        type: integer
        format: int64
  models.Category:
    title: Category
    type: object
    properties:
      Article:
        type: array
        items:
          $ref: '#/definitions/models.Article'
      Id:
        type: integer
        format: int64
      Name:
        type: string
      SubCategory:
        type: array
        items:
          $ref: '#/definitions/models.SubCategory'
      Url:
        type: string
  models.Comment:
    title: Comment
    type: object
    properties:
      Article:
        $ref: '#/definitions/models.Article'
      Content:
        type: string
      Date:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      SubComment:
        type: array
        items:
          $ref: '#/definitions/models.SubComment'
      User:
        $ref: '#/definitions/models.User'
      Zan:
        type: integer
        format: int64
  models.Message:
    title: Message
    type: object
    properties:
      Content:
        description: xss  cross-site scriptong 跨站脚本漏洞
        type: string
      Date:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      User:
        $ref: '#/definitions/models.User'
  models.Profile:
    title: Profile
    type: object
    properties:
      Address:
        type: string
      Age:
        type: integer
        format: int64
      Avator:
        type: string
      Gender:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Personality:
        type: string
      Telephone:
        type: string
      User:
        $ref: '#/definitions/models.User'
  models.SubCategory:
    title: SubCategory
    type: object
    properties:
      Article:
        type: array
        items:
          $ref: '#/definitions/models.Article'
      Category:
        $ref: '#/definitions/models.Category'
      Id:
        type: integer
        format: int64
      Name:
        type: string
      Url:
        type: string
  models.SubComment:
    title: SubComment
    type: object
    properties:
      Article:
        $ref: '#/definitions/models.Article'
      Comment:
        $ref: '#/definitions/models.Comment'
      Content:
        type: string
      Date:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      User:
        $ref: '#/definitions/models.User'
      Zan:
        type: integer
        format: int64
  models.Tag:
    title: Tag
    type: object
    properties:
      Article:
        type: array
        items:
          $ref: '#/definitions/models.Article'
      Id:
        type: integer
        format: int64
      Name:
        type: string
  models.User:
    title: User
    type: object
    properties:
      Article:
        type: array
        items:
          $ref: '#/definitions/models.Article'
      Comment:
        type: array
        items:
          $ref: '#/definitions/models.Comment'
      CryptPassword:
        type: string
      Date:
        type: string
        format: datetime
      Email:
        type: string
      Id:
        type: integer
        format: int64
      Message:
        type: array
        items:
          $ref: '#/definitions/models.Message'
      Password:
        type: string
      Profile:
        $ref: '#/definitions/models.Profile'
      SubComment:
        type: array
        items:
          $ref: '#/definitions/models.SubComment'
      Superuser:
        type: integer
        format: int64
      Token:
        type: string
      Username:
        type: string
  models.article:
    title: article
    type: object
  str:
    title: str
    type: object
tags:
- name: category
  description: |
    Operations about Category
- name: tag
  description: |
    Operations about SubCategory
- name: sub_category
  description: |
    Operations about SubCategory
- name: user
  description: |
    Operations about profile
- name: article
  description: |
    Operations about Article
